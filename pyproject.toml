[build-system]
requires = ["scikit-build-core>=0.3"]
build-backend = "scikit_build_core.build"

[project]
name = "goofit"
version = "2.4.0"
description = "GooFit fitting package"
readme = "README-python.rst"
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: Unix",
    "Programming Language :: C++",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Physics",
]

[project.urls]
Homepage = "https://goofit.github.io"
Documentation = "https://goofit.github.io/GooFit"
"Bug Tracker" = "https://github.com/scikit-hep/package/issues"
Changelog = "https://github.com/GooFit/GooFit/blob/master/docs/CHANGELOG.md"


[project.optional-dependencies]
test = [
    "pytest>=6",
]
dev = [
    "pytest",
    "matplotlib>=1.5",
    "pandas>=0.15.1",
    "uncertainties>=3.0.2",
    "scipy",
    "plumbum",
]


[tool.scikit-build]
minimum-version = "0.3"
build-dir = "build/{wheel_tag}"
cmake.minimum-version = "3.16"

[tool.scikit-build.cmake.define]
GOOFIT_PYTHON = "ON"
GOOFIT_TESTS = "OFF"
GOOFIT_CERNROOT = "OFF"
GOOFIT_EXAMPLES = "OFF"
GOOFIT_PROJECTS = "OFF"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "info"
testpaths = ["python/tests"]

[tool.ruff]
select = [
  "E", "F", "W", # flake8
  "B", "B904",   # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "ISC",         # flake8-implicit-str-concat
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
]
ignore = [
  "E402",
  "E501",
  "E722",
  "F403",
  "F405",
  "PLR",
]
target-version = "py37"
exclude = []
flake8-unused-arguments.ignore-variadic-names = true
isort.known-first-party = ["goofit"]
mccabe.max-complexity = 12
